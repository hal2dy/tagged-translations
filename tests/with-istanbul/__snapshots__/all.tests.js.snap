// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test with-istanbul.js 1`] = `
"var cov_1757r1xw1o = function () {
  var path = '/Users/vinhlh/Works/vinhlh/tagged-translations/tests/with-istanbul/with-istanbul.js',
      hash = '7e28677ff6d4f78ca5a7c081fd387b2ac96cbe31',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/vinhlh/Works/vinhlh/tagged-translations/tests/with-istanbul/with-istanbul.js',
    statementMap: {
      '0': {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 31
        }
      },
      '1': {
        start: {
          line: 5,
          column: 34
        },
        end: {
          line: 5,
          column: 58
        }
      },
      '2': {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 58
        }
      },
      '3': {
        start: {
          line: 7,
          column: 37
        },
        end: {
          line: 8,
          column: 46
        }
      },
      '4': {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 8,
          column: 46
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 35
          }
        },
        loc: {
          start: {
            line: 5,
            column: 42
          },
          end: {
            line: 5,
            column: 58
          }
        },
        line: 5
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 38
          }
        },
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 46
          }
        },
        line: 8
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 7,
            column: 44
          },
          end: {
            line: 7,
            column: 58
          }
        },
        type: 'default-arg',
        locations: [{
          start: {
            line: 7,
            column: 54
          },
          end: {
            line: 7,
            column: 58
          }
        }],
        line: 7
      },
      '1': {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 46
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 28
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 46
          }
        }],
        line: 8
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0
    },
    f: {
      '0': 0,
      '1': 0
    },
    b: {
      '0': [0],
      '1': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

const name = (cov_1757r1xw1o.s[0]++, \`Xin chÃ o \${'Vinh'} ðŸ‘»\`);

cov_1757r1xw1o.s[1]++;
const funcReturnsOneTranslation = name => {
  cov_1757r1xw1o.f[0]++;
  cov_1757r1xw1o.s[2]++;
  return t\`Xin chÃ o \${name} ðŸ‘»\`;
};

cov_1757r1xw1o.s[3]++;
const funcHasConditionalExpression = (name, success = (cov_1757r1xw1o.b[0][0]++, true)) => {
  cov_1757r1xw1o.f[1]++;
  cov_1757r1xw1o.s[4]++;
  return success ? (cov_1757r1xw1o.b[1][0]++, \`Xin chÃ o \${name} ðŸ‘»\`) : (cov_1757r1xw1o.b[1][1]++, \\"it's an error\\");
};"
`;
